#@file .tmux.conf
#@author David Wallace BLACK
#@since 2022-02-24
# lots of sources
#https://github.com/tmux-plugins/tmux-logging/blob/master/docs/configuration.md
#https://linuxhint.com/customize-tmux-configuration/
#https://www.hamvocke.com/blog/a-guide-to-customizing-your-tmux-conf/
#https://dev.to/iggredible/tmux-tutorial-for-beginners-5c52
#(ALSO) https://dev.to/iggredible/useful-tmux-configuration-examples-k3g
#(ALSO) https://github.com/iggredible/Learn-Vim
#https://gist.github.com/rodricels/7951c3bd505d343b07309b76188af9b3
#https://github.com/wbkang/wbk-stow/blob/master/tmux-config/.tmux.conf



#DWB 2022-02-24 to 25
# Why I started this - logging
dwb_tmux_log_path="/home/dblack/work_logs/tmux_logs"

set -g @logging-path "$dwb_tmux_log_path"
  #"/home/dblack/work_logs/tmux_logs"
set -g @screen-capture-path "$dwb_tmux_log_path"
  #"/home/dblack/work_logs/tmux_logs"
set -g @save-complete-history-path "$dwb_tmux_log_path"
  #"/home/dblack/work_logs/tmux_logs"

##DWB 2022-02-26 -^- and comments -v-
## Make logs alpabetical (date-ordered)
##+ In `~/.tmux/plugins/tmux-logging/scripts/variables.sh'
#filename_suffix="Work_DWB-%s\
#-#{session_name}-#{window_index}-#{pane_index}-%Y%m%dT%H%M%S%z.log"

#DWB 2022-02-24
# I always prefer vim-like
set-window-option -g mode-keys vi

## KEY BINDINGS
#DWB 2022-02-24
# setting two prefixes: <s>'Alt+b' and 'Ctrl+b'</s>
#DWB 2022-02-28         'Ctrl+Space' and 'Ctrl+b'
# also cf. https://superuser.com/questions/446721/tmux-bind-key-with-two-keys
unbind C-Space # (probably not needed, DWB 2022-03-17)
set-option -g prefix C-Space
set-option -g prefix2 C-b
bind-key C-Space send-prefix # good for nested panes, cf.
                       # dev.to/iggredible/tmux-tutorial-for-beginners-5c52

#DWB 2022-03-17, toggle getween previous and current window
bind-key M-Space last-window

# press the prefix followed by the `r' key to reload the ~/.tmux.conf
bind r source-file ~/.tmux.conf \; display " .tmux.conf reloaded "

#DWB 2022-02-24
# Want logging to get everything, when I start tmux-logging mid-session
set -g history-limit 50000

##DWB 2022-02-24
# Show messages for 3 seconds instead of default 5 seconds
set -g display-time 3000

##DWB 2022-02-24
# set first window to index 1 (not 0) to map more to the keyboard layout
#DWB, out 2022-03-07 for logging#set-option -g renumber-windows on
set -g base-index 1
setw -g pane-base-index 1

#DWB 2022-02-24
# don't rename windows automatically; you can rename with ","
set-option -g allow-rename off

##DWB 2022-02-24
## For now, not using the keep-the-same-dir-when-split thing.
#unbind-key c
#bind-key c new-window -c '#{pane_current_path}'

##DWB 2022-02-28
# I want the status bar at the top.
set-option -g status-position top

##DWB 2022-03-09
# resize shortcuts
bind-key -r < resize-pane -L 5
bind-key -r > resize-pane -R 5
bind-key -r ^ resize-pane -U 1
bind-key -r v resize-pane -D 1

bind -r C-j resize-pane -D 15
bind -r C-k resize-pane -U 15
bind -r C-h resize-pane -L 15
bind -r C-l resize-pane -R 15

#DWB 2022-02-24
# Split commands that make intuitive sense
#keep both, I hope#unbind '"' # keep-both, etc. dwb 2022-03-09
#keep both, I hope#unbind %
# maybe a ref -v-
#ref="https://www.reddit.com/r/tmux/comments/"\
#"1rxpnq/bind_two_keys_to_the_same_command/"
bind '"'  split-window -h
bind '%'  split-window -v
bind '\'  split-window -h  # lower-case versions take you back
bind '-'  split-window -v   #+ to default (not same dir)
# -v- upper-case versions will do the keep-the-same-dir-when-split thing
bind '_' split-window -hc "#{pane_current_path}"
bind '|' split-window -hc "#{pane_current_path}"
# From https://stackoverflow.com/a/54788315/6505499
#+ the `-' key is already bound to `delete-buffer'
#+ That must have been a previous version.

#DWB 2022-03-17, after marking a pane with [Prefix]+[m], return to it with
#+ [Prefix]+[`]
bind '`' switch-client -t'{marked}'

#DWB 2022-02-24
# Want mouse scrolling option, tmux > 2.1
set -g mouse on

#DWB 2022-02-24
## Clipboard integration
set -g set-clipboard on

#### I started with this, from
####+ https://gist.github.com/rodricels/7951c3bd505d343b07309b76188af9b3
####+ and its comments, but I still had trouble.
####+ Now I'm trying the tmux-yank plugin
####+ DWB 2022-03-09
### All this needs `sudo dnf -y xclip
## [prefix then] ctrl+c to send to clipboard
#bind C-c run "tmux save-buffer - | xclip -i -sel clipboard"
## [prefix then] ctrl+v to paste from clipboard
#bind C-v run \
#  "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"
#
## Selection with mouse should copy to clipboard right away,
##+ in addition to the default action.
#unbind -n -Tcopy-mode-vi MouseDragEnd1Pane
#bind -Tcopy-mode-vi MouseDragEnd1Pane \
# send -X copy-selection-and-cancel\; \
#  run "tmux save-buffer - | \
#       xclip -sel clipboard -sel primary -i > /dev/null; \
#       tmux display-message 'copied!'"
#
## Middle click to paste from the clipboard
#unbind-key MouseDown2Pane
#bind-key -n MouseDown2Pane \
# run "X=\"$( xclip -sel clipboard -sel primary -o ; )\"; \
#   tmux set-buffer -- \"$X\"; \
#   tmux paste-buffer -p; \
#   tmux display-message 'pasted!'"
#
## Note from https://gist.github.com/rodricels/7951c3bd505d343b07309b76188af9b3
##+ comments
##>>>bind-key -n MouseDown2Pane run " \
##//           [No comments here]
##//
##>>>tmux set-buffer -- \"$(xclip -o -sel primary);\"; \
##//                  ^^                          ^
##//                  [1]                         [2]
##//
##>>>tmux paste-buffer -p"
##//                   ^^
##//                   [3]
##
##
##[1]: Stop parsing options. This prevents text starting with "-" to be
##+    interpreted as options. (e.g. keeps it so, when pasting something
##+    that starts with a minus, like `--option`, it doesn't paste the
##+    previous thing, whatever it was.
##[2]: Always insert a semicolon. The last semicolon is always cut away, so
##+    just add a dummy.
##[3]: Paste bracket control codes. Allows, for example, pasting in vim
##+    normal mode
#
### If those copy/paste things don't work, then use ..

###DWB 2022-03-09, they didn't work, so
## https://www.seanh.cc/2020/12/27/copy-and-paste-in-tmux/
## https://github.com/tmux-plugins/tmux-yank
## https://github.com/tmux/tmux/wiki/Clipboard
## "https://www.freecodecamp.org/news/tmux-in-practice-"\
##"integration-with-system-clipboard-bcd72c62ff7b/"
## "https://github.com/samoshkin/tmux-config/blob/"\
##"af2efd9561f41f30c51c9deeeab9451308c4086b/tmux/yank.sh"
## "https://medium.com/hackernoon/tmux-in-practice-copy-text-"\
##"from-remote-session-using-ssh-remote-tunnel-and-"\
##"systemd-service-dd3c51bca1fa"
## https://sunaku.github.io/tmux-yank-osc52.html


## All of this needs `sudo dnf install -y xsel`         (that's for X)
##                or `sudo dnf install -y wl-clipboard` (that's for Wayland;
##                                                       I won't use it)
##                                        Wayland reference at
## https://en.wikipedia.org/wiki/Wayland_(display_server_protocol)
## https://wayland.freedesktop.org/docs/html/
## https://github.com/bugaevc/wl-clipboard
#

# These bindings are for X Windows only. If you're using a different
# window system you have to replace the `xsel` commands with something
# else. See https://github.com/tmux/tmux/wiki/Clipboard#available-tools
## DWB note, 2022-03-09
##+ I'm trying to use the xclip and xsel options from the
##+ freecodecamp source. I think that fiilterning (`-f') for both
##+ of the xclip followed by the xsel, meaning that, for the ending
##+ parts of the commands below, instead of
##+ `copy-pipe-no-clear "xsel -i"'
##+ I will use
##+ `copy-pipe-no-clear "xclip -i -f -selection primary | \
##+                      xclip -i -f -selection secondary | \
##+                      xclip -i -f -selection clipboard | \
##+                      xsel -i --clipboard"'
##+
##+ That is what I'll do instead of using, as per
##+ https://unix.stackexchange.com/a/28519/291375
##+ which would imply the command
##+ `copy-pipe-no-clear "xclip -i -f -selection primary | tee \
##+                      >(xclip -i -selection secondary) \
##+                      >(xclip -i -selection clipboard) \
##+                      >(xsel -i --clipboard)"'
##+ or maybe a combination:
##+ `copy-pipe-no-clear "xclip -i -f -selection primary | \
##+                      xclip -i -f -selection secondary | \
##+                      xclip -i -f -selection clipboard | tee \
##+                      >(xsel -i --clipboard) \
##+                      >(xsel -i --primary) \
##+                      >(xsel -i --secondary)"'
##+
##+ I'm also thinking that one might get all three clipboards in the copy
##+ with
##+ `copy-pipe-no-clear "xclip -i -f -selection primary | \
##+                      xclip -i -f -selection secondary | \
##+                      xsel -i --clipboard"'


#ok?###Taken out 2022-03-16, DWB
#ok?#bind -T copy-mode \
#ok?#  DoubleClick1Pane select-pane \; \
#ok?#   send -X select-word \; \
#ok?#    send -X copy-pipe-no-clear "xsel -i --clipboard; display 'copied'; --"
#ok?#                              # "xclip -i -f -selection primary | \
#ok?#                              #   tee /dev/null | \
#ok?#                              #  xclip -i -f -selection secondary | \
#ok?#                              #    tee /dev/null | \
#ok?#                              #  xclip -i -f -selection clipboard | \
#ok?#                              #    tee /dev/null | \
#ok?#                              #  xsel -i --clipboard"
#ok?##"xsel -i"
#ok?#
#ok?#bind -T copy-mode-vi \
#ok?#  DoubleClick1Pane select-pane \; \
#ok?#   send -X select-word \; \
#ok?#    send -X copy-pipe-no-clear "xsel -i --clipboard; display 'copied'; --"
#ok?#                               #"xclip -i -f -selection primary | \
#ok?#                               #  tee /dev/null | \
#ok?#                               # xclip -i -f -selection secondary | \
#ok?#                               #   tee /dev/null | \
#ok?#                               # xclip -i -f -selection clipboard | \
#ok?#                               #   tee /dev/null | \
#ok?#                               # xsel -i --clipboard"
#ok?##"xsel -i"
#ok?#
#ok?#bind -n DoubleClick1Pane select-pane \; \
#ok?#  copy-mode -M \; send -X select-word \; \
#ok?#    send -X copy-pipe-no-clear "xsel -i --clipboard; display 'copied'; --"
#ok?#                               #"xclip -i -f -selection primary | \
#ok?#                               #  tee /dev/null | \
#ok?#                               # xclip -i -f -selection secondary | \
#ok?#                               #   tee /dev/null | \
#ok?#                               # xclip -i -f -selection clipboard | \
#ok?#                               #   tee /dev/null | \
#ok?#                               # xsel -i --clipboard"
#ok?##"xsel -i"
#ok?#
#ok?#bind -T copy-mode \
#ok?#  TripleClick1Pane select-pane \; \
#ok?#   send -X select-line \; \
#ok?#    send -X copy-pipe-no-clear "xsel -i --clipboard; display 'copied'; --"
#ok?#                               #"xclip -i -f -selection primary | \
#ok?#                               #  tee /dev/null | \
#ok?#                               # xclip -i -f -selection secondary | \
#ok?#                               #   tee /dev/null | \
#ok?#                               # xclip -i -f -selection clipboard | \
#ok?#                               #   tee /dev/null | \
#ok?#                               # xsel -i --clipboard"
#ok?##"xsel -i"
#ok?#
#ok?#bind -T copy-mode-vi \
#ok?#  TripleClick1Pane select-pane \; \
#ok?#   send -X select-line \; \
#ok?#    send -X copy-pipe-no-clear "xsel -i --clipboard; display 'copied'; --"
#ok?#                               #"xclip -i -f -selection primary | \
#ok?#                               #  tee /dev/null | \
#ok?#                               # xclip -i -f -selection secondary | \
#ok?#                               #   tee /dev/null | \
#ok?#                               # xclip -i -f -selection clipboard | \
#ok?#                               #   tee /dev/null | \
#ok?#                               # xsel -i --clipboard"
#ok?##"xsel -i"
#ok?#
#ok?#bind -n TripleClick1Pane select-pane \; \
#ok?#  copy-mode -M \; send -X select-line \; \
#ok?#    send -X copy-pipe-no-clear "xsel -i --clipboard; display 'copied'; --"
#ok?#                               #"xclip -i -f -selection primary | \
#ok?#                               #  tee /dev/null | \
#ok?#                               # xclip -i -f -selection secondary | \
#ok?#                               #   tee /dev/null | \
#ok?#                               # xclip -i -f -selection clipboard | \
#ok?#                               #   tee /dev/null | \
#ok?#                               # xsel -i --clipboard"
#ok?##"xsel -i"
#ok?#
#ok?#bind -n MouseDown2Pane run " \
#ok?#  tmux set-buffer -b primary_selection \"$(xsel -o --clipboard --)\"; \
#ok?#  tmux paste-buffer -b primary_selection; \
#ok?#  tmux delete-buffer -b primary_selection"

### Following from installation instructions in tpm ###

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# DWB plugins added
set -g @plugin 'tmux-plugins/tmux-logging'
  #2022-02-24

set -g @plugin 'tmux-plugins/tmux-yank'
#set -g @override_copy_command xsel i --clipboard; display 'copied';
#                             # "xclip -i -f -selection primary | \
#                             #   tee /dev/null | \
#                             #  xclip -i -f -selection secondary | \
#                             #    tee /dev/null | \
#                             #  xclip -i -f -selection clipboard | \
#                             #    tee /dev/null | \
#                             #  xsel -i --clipboard"
set -g @yank_action 'copy-pipe-no-clear'
set -g @yank_with_mouse on
# -v- Next line ref: "https://unix.stackexchange.com/669231/201375"
set -g @yank_selection_mouse 'clipboard'
#ok?###DWB, removed 2022-03-16
#ok?#bind -T copy-mode    C-c send -X copy-pipe-no-clear " \
#ok?#                                xsel -i --clipboard; display 'copied'; --"
#ok?#                                #xclip -i -f -selection primary | \
#ok?#                                # tee /dev/null | \
#ok?#                                #xclip -i -f -selection secondary | \
#ok?#                                #  tee /dev/null | \
#ok?#                                #xclip -i -f -selection clipboard | \
#ok?#                                #  tee /dev/null | \
#ok?#                                #xsel -i --clipboard --"
#ok?##"xsel -i --clipboard"
#ok?#bind -T copy-mode-vi C-c send -X copy-pipe-no-clear " \
#ok?#                                xsel -i --clipboard; display 'copied'; --"
#ok?#                                #xclip -i -f -selection primary | \
#ok?#                                # tee /dev/null | \
#ok?#                                #xclip -i -f -selection secondary | \
#ok?#                                #  tee /dev/null | \
#ok?#                                #xclip -i -f -selection clipboard | \
#ok?#                                #  tee /dev/null | \
#ok?#                                #xsel -i --clipboard ---"
#ok?##"xsel -i --clipboard"
#ok?#  #2022-03-09

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

#Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
